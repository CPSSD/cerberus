syntax = "proto3";

package filesystem;

// File System Master service is responsible for recieving files uploaded to the file system 
// and processing requests for file locations from workers. 
service FileSystemMasterService {
    rpc UploadFile (UploadFileRequest) returns (EmptyMessage);
    rpc DownloadFile (DownloadFileRequest) returns (DownloadFileResponse);
    rpc GetFileLocation (FileLocationRequest) returns (FileLocationResponse);
}

// Empty message where there is nothing to be send or replied with.
message EmptyMessage {}

message UploadFileRequest {
    string file_path = 1;
    string client_id = 2;
    uint64 start_byte = 3; 
    bytes data = 4;
}

message DownloadFileRequest {
    string file_path = 1;
    string client_id = 2;
    uint64 start_byte = 3; 
    uint64 end_byte = 4; 
}

message DownloadFileResponse {
    bytes data = 1;
}

message FileLocationRequest {
    string file_path = 1;
    uint64 start_byte = 2; 
    uint64 end_byte = 3; 
}

message FileLocation {
    string worker_address = 1;
    uint64 start_byte = 2; 
    uint64 end_byte = 3; 
}

message FileLocationResponse {
    repeated FileLocation file_locations = 1;
}

// File System Worker service is responsible for recieving distributed files from the master
// and allowing other workers to read the files stored on that worker.
service FileSystemWorkerService {
    rpc StoreFile (StoreFileRequest) returns (EmptyMessage);
    rpc ReadFile (ReadFileRequest) returns (ReadFileResponse);
}

message StoreFileRequest {
    string file_path = 1;
    uint64 start_byte = 2; 
    bytes data = 3;
}

message ReadFileRequest {
    string file_path = 1;
    uint64 start_byte = 2;
    uint64 end_byte = 3;
}

message ReadFileResponse {
    bytes data = 1;
}
